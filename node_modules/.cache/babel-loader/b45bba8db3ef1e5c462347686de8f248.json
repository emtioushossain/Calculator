{"ast":null,"code":"var _jsxFileName = \"/home/emtious/Project/React-Project/calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Display from './component/display.js';\nimport CalculatorButton from './component/button.js';\nimport { Button, Col, Container, Input, InputGroup, InputGroupAddon, Nav, Navbar, NavbarBrand, NavItem, NavLink, Row } from 'reactstrap';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      calculation_result: '',\n      new_cal: 'new_click'\n    };\n\n    this.buttonClick = value => {\n      if (value === '=') {\n        this.calculation();\n      } else if (value === 'CLR') this.clear();else {\n        this.getFullString(value);\n      }\n    };\n\n    this.getFullString = input => {\n      this.setState({\n        calculation_result: this.state.calculation_result + input,\n        new_cal: 'new_click'\n      });\n    };\n\n    this.calculation = () => {\n      var result = this.state.calculation_result;\n\n      try {\n        this.setState({\n          calculation_result: eval(result),\n          new_cal: 'result_found'\n        });\n      } catch (e) {\n        this.setState({\n          calculation_result: ''\n        });\n      }\n    };\n\n    this.clear = () => {\n      this.setState({\n        calculation_result: '',\n        new_cal: 'new_click'\n      });\n    };\n  }\n\n  render() {\n    const calculation_result = this.state.calculation_result;\n    const new_cal = this.state.new_cal;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Display, {\n      calculation_result: calculation_result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(CalculatorButton, {\n      calculate: this.buttonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      color: \"light\",\n      light: true,\n      expand: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"MovieTime\"), React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"https://www.themoviedb.org\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"This product uses the TMDb API but is not endorsed or certified by TMDb\")))))), React.createElement(Row, {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Find a movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      className: \"search-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Search\"))))), React.createElement(Row, {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.movies.map(movie => React.createElement(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: movie.id,\n      className: \"movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Movie, {\n      movie: movie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/emtious/Project/React-Project/calculator/src/App.js"],"names":["React","Component","ReactDOM","Display","CalculatorButton","Button","Col","Container","Input","InputGroup","InputGroupAddon","Nav","Navbar","NavbarBrand","NavItem","NavLink","Row","App","state","calculation_result","new_cal","buttonClick","value","calculation","clear","getFullString","input","setState","result","eval","e","render","movies","map","movie","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,SACIC,MADJ,EACYC,GADZ,EAEIC,SAFJ,EAGIC,KAHJ,EAIIC,UAJJ,EAKIC,eALJ,EAMIC,GANJ,EAOIC,MAPJ,EAQIC,WARJ,EASIC,OATJ,EAUIC,OAVJ,EAWIC,GAXJ,QAYO,YAZP;;AAcA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BiB,KAF0B,GAElB;AACNC,MAAAA,kBAAkB,EAAG,EADf;AAENC,MAAAA,OAAO,EAAG;AAFJ,KAFkB;;AAAA,SAO1BC,WAP0B,GAOZC,KAAK,IAAG;AAEpB,UAAGA,KAAK,KAAK,GAAb,EAAiB;AACb,aAAKC,WAAL;AACH,OAFD,MAIK,IAAGD,KAAK,KAAK,KAAb,EACD,KAAKE,KAAL,GADC,KAED;AACA,aAAKC,aAAL,CAAmBH,KAAnB;AACH;AAEF,KAnByB;;AAAA,SAsB3BG,aAtB2B,GAsBXC,KAAK,IAAG;AACtB,WAAKC,QAAL,CAAc;AACVR,QAAAA,kBAAkB,EAAG,KAAKD,KAAL,CAAWC,kBAAX,GAAgCO,KAD3C;AAEVN,QAAAA,OAAO,EAAG;AAFA,OAAd;AAID,KA3B0B;;AAAA,SA8B1BG,WA9B0B,GA8BZ,MAAM;AAEhB,UAAIK,MAAM,GAAG,KAAKV,KAAL,CAAWC,kBAAxB;;AAEA,UAAI;AACJ,aAAKQ,QAAL,CAAc;AACZR,UAAAA,kBAAkB,EAACU,IAAI,CAACD,MAAD,CADX;AAEZR,UAAAA,OAAO,EAAG;AAFE,SAAd;AAMC,OAPD,CAQA,OAAMU,CAAN,EAAQ;AACN,aAAKH,QAAL,CAAc;AACZR,UAAAA,kBAAkB,EAAC;AADP,SAAd;AAID;AAGJ,KAlDyB;;AAAA,SAoD1BK,KApD0B,GAoDlB,MAAK;AACX,WAAKG,QAAL,CAAc;AACZR,QAAAA,kBAAkB,EAAC,EADP;AAEZC,QAAAA,OAAO,EAAC;AAFI,OAAd;AAKD,KA1DyB;AAAA;;AA6D1BW,EAAAA,MAAM,GAAG;AAAA,UAEAZ,kBAFA,GAEsB,KAAKD,KAF3B,CAEAC,kBAFA;AAAA,UAGAC,OAHA,GAGW,KAAKF,KAHhB,CAGAE,OAHA;AAIP,WAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGU;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,kBAAkB,EAAED,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,gBAAD;AAAmB,MAAA,SAAS,EAAI,KAAKE,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAMI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAHV,EAaI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,MAA3B;AAA4B,MAAA,MAAM,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADJ,CADJ,CAFJ,CADJ,CADJ,CAbJ,EA8BI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AACQ,MAAA,SAAS,EAAC,eADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAFJ,CADJ,CADJ,CA9BJ,EA6CI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKH,KAAL,CAAWc,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,IACvB,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,EAAE,EAAC,GAAf;AACK,MAAA,GAAG,EAAEA,KAAK,CAACC,EADhB;AAEK,MAAA,SAAS,EAAC,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAED,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CAFR,CA7CJ,CALF;AAoED;;AArIyB;;AA4I5B,eAAejB,GAAf","sourcesContent":["import React , {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Display from './component/display.js'\nimport CalculatorButton from './component/button.js'\nimport {\n    Button, Col,\n    Container,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    NavLink,\n    Row\n} from 'reactstrap';\n\nclass App extends Component {\n\n  state = {\n    calculation_result : '',\n    new_cal : 'new_click'\n  }\n\n  buttonClick = value =>{\n\n    if(value === '='){\n        this.calculation()\n    }\n\n    else if(value === 'CLR')\n        this.clear()\n    else{\n        this.getFullString(value)\n    }\n\n  }\n\n\n getFullString = input =>{\n   this.setState({\n       calculation_result : this.state.calculation_result + input ,\n       new_cal : 'new_click'\n   })\n }\n\n\n  calculation = () => {\n\n      var result = this.state.calculation_result\n\n      try {\n      this.setState({\n        calculation_result:eval(result),\n        new_cal : 'result_found'\n\n      })\n\n      }\n      catch(e){\n        this.setState({\n          calculation_result:''\n\n        })\n      }\n\n\n  }\n\n  clear = () =>{\n    this.setState({\n      calculation_result:'',\n      new_cal:'new_click'\n    })\n\n  }\n\n\n  render() {\n\n    const {calculation_result} = this.state ;\n    const {new_cal} = this.state ;\n    return (\n\n\n\n\n      <Container>\n          {/*Navigation*/}\n\n                <div className=\"row\">\n                    <div className=\"col-md-5\"></div>\n                    <div className=\"col-md-3\">\n                        <Display calculation_result={calculation_result}/>\n                        <CalculatorButton  calculate = {this.buttonClick}/>\n                    </div>\n                    <div className=\"col-md-4\"></div>\n                </div>\n\n\n          <Row>\n              <Col sm=\"12\">\n                  <Navbar color=\"light\" light expand=\"md\">\n                      <NavbarBrand href=\"/\">MovieTime</NavbarBrand>\n                      <Nav className=\"ml-auto\" navbar>\n                          <NavItem>\n                              <NavLink href=\"https://www.themoviedb.org\">\n                                  This product uses the TMDb API but is\n                                  not endorsed or certified by TMDb\n                              </NavLink>\n                          </NavItem>\n                      </Nav>\n                  </Navbar>\n              </Col>\n          </Row>\n\n          {/*Search field and button*/}\n          <Row className=\"search\">\n              <Col sm=\"12\">\n                  <InputGroup>\n                      <Input placeholder=\"Find a movie\"/>\n                      <InputGroupAddon addonType=\"prepend\">\n                          <Button color=\"success\"\n                                  className=\"search-button\">\n                              Search\n                          </Button>\n                      </InputGroupAddon>\n                  </InputGroup>\n              </Col>\n          </Row>\n\n          {/*The fetched list of movies*/}\n          <Row className=\"content\">\n              {\n                  this.state.movies.map(movie =>\n                      <Col xs=\"6\" sm=\"4\"\n                           key={movie.id}\n                           className=\"movie\">\n                          <Movie movie={movie} />\n                      </Col>\n                  )\n              }\n          </Row>\n      </Container>\n\n\n\n\n\n    )\n  }\n\n\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}